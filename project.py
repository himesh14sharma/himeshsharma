# -*- coding: utf-8 -*-
"""Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14AMsVz6LqzjFLcu82Qxbto_earvFrBKQ

Project Name :- Weather

 NAME :- HIMESH SHARMA

 CLASS :- BCA(DS) 3rd Sem

 ROLL NO :- BCA(DS)/24-023
"""

import pandas as pd

# Load the CSV file
df = pd.read_csv("weather.csv.csv")

df

# 1.	What is the shape of the dataset?
df.shape

# 2.	What are the column names and their data types?
df.dtypes

# 3.	How many missing values are there in each column?
df.isnull().count()

# 4.	Show the summary statistics for numerical columns.
df.describe()

# 5.Unique values in RainToday and RainTomorrow
df['RainToday'].unique(),df['RainTomorrow'].unique()

# 6.	What is the correlation between numerical features

# 7.	Count how many days it rained (RainToday == 'Yes').
df['RainToday']=='Yes'

# 8.	What is the average temperature (Temp3pm) when RainTomorrow is 'Yes'?
df[df['RainToday']=='Yes']['Temp3pm'].mean()

# 9.	Which location had the highest average Humidity3pm?
df['Humidity3pm'].max()

# 10.	What is the maximum recorded WindSpeed9am and where did it occur?
df['WindSpeed9am'].max()

# 11.	Filter all rows where RainToday is 'Yes' and RainTomorrow is 'Yes'.
df.columns = df.columns.str.strip()
df[(df['RainToday'] == 'Yes') & (df['RainTomorrow'] == 'Yes')]

#12.	Group data by Location and calculate average Temp9am.

df.groupby('Location')['Temp9am'].mean()

# 13.	Find the top 5 cities with the highest average Rainfall.

df.groupby('Location')['Rainfall'].mean().sort_values(ascending=False).head(5)

# 14.	How many unique locations are in the dataset?
df['Location'].nunique()

#  15.	Calculate total rainfall per month using the Date column.


df['Date'] = pd.to_datetime(df['Date'])

# Extract the month from the Date
df['Month'] = df['Date'].dt.month

# Group by month and calculate the sum of Rainfall
monthly_rainfall = df.groupby('Month')['Rainfall'].sum()

# Print or display the result
monthly_rainfall

#16.	Find the most common wind direction at 3pm.


df_3pm = df[df['Date'].dt.hour == 15]


most_common_wind_direction_3pm = df_3pm['WindGustDir'].mode()[0]

print(f"The most common wind direction at 3pm is: {most_common_wind_direction_3pm}")

# 17.	Show the average pressure (Pressure9am) grouped

df.groupby('Location')['Pressure9am'].mean()

# 18.	Plot a histogram of Rainfall.

import matplotlib.pyplot as plt
plt.hist(df['Rainfall'])
plt.xlabel('Rainfall (mm)')
plt.ylabel('Frequency')
plt.title('Histogram of Rainfall')
plt.show()

# 19.	Draw a boxplot for Temp3pm by RainTomorrow.

import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
df.boxplot(column='Temp3pm', by='RainTomorrow')
plt.title('Boxplot of Temp3pm by RainTomorrow')
plt.suptitle('')
plt.xlabel('Rain Tomorrow')
plt.ylabel('Temperature at 3pm')
plt.show()

# 20.	Create a line plot of average daily Humidity9am over time.

import matplotlib.pyplot as plt
# Group by date and calculate the average Humidity9am
average_humidity_9am_over_time = df.groupby('Date')['Humidity9am'].mean()

plt.figure(figsize=(12, 6))
average_humidity_9am_over_time.plot()
plt.title('Average Daily Humidity at 9am Over Time')
plt.xlabel('Date')
plt.ylabel('Average Humidity at 9am')
plt.grid(True)
plt.show()

# 21. Make a scatter plot of Temp9am vs Humidity9am.


plt.figure(figsize=(10, 6))
plt.scatter(df['Temp9am'], df['Humidity9am'])
plt.title('Scatter Plot of Temperature at 9am vs Humidity at 9am')
plt.xlabel('Temperature at 9am')
plt.ylabel('Humidity at 9am')
plt.grid(True)
plt.show()

# 22. Use a heatmap to show the correlation between numerical columns.
import seaborn as sns
import matplotlib.pyplot as plt

numerical_df = df.select_dtypes(include=['float64', 'int64'])

correlation_matrix = numerical_df.corr()

plt.figure(figsize=(12, 10))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap of Numerical Columns')
plt.show()

# Q23. Count how many days the temperature at 3pm was above 30°C.
(df['Temp3pm'] > 30).sum()

# Q24. Create a new column TempRange = MaxTemp - MinTemp
df['TempRange'] = df['MaxTemp'] - df['MinTemp']

#  Q31. How many days had both WindSpeed9am and WindSpeed3pm greater than 40 km/h?
((df['WindSpeed9am'] > 40) & (df['WindSpeed3pm'] > 40)).sum()

# Q26. What is the average Rainfall for each wind direction at 9am?
df.groupby('WindDir9am')['Rainfall'].mean()

# 26.	Create a new column Rain_Difference = Rainfall - Evaporation and find its mean.
df['Rain_Difference'] = df['Rainfall'] - df['Evaporation']
df['Rain_Difference'].mean()

# 27.	Calculate percentage of missing values per column
(df.isnull().sum() / len(df)) * 100

# 28. (NumPy): Count how many values in MaxTemp are greater than the mean MaxTemp
import numpy as np
np.sum(df['MaxTemp'] > np.mean(df['MaxTemp']))

# 29.(NumPy): Find the mean, median, and standard deviation of Rainfall column
import numpy as np
np.mean(df['Rainfall']), np.median(df['Rainfall']), np.std(df['Rainfall'])

# Q7: Replace all negative values in Rainfall with 0 using NumPy
import numpy as np
rainfall = df['Rainfall'].to_numpy()
rainfall[rainfall < 0] = 0
df['Rainfall'] = rainfall

"""Key Findings.

. MaxTemp and MinTemp were strongly positively correlated (r ≈ 0.75), showing consistent daily warming and cooling trends.

. The dataset recorded wind speeds of over 100 km/h at 9 AM in certain coastal areas

. When it rained today, the chance of rain tomorrow increased significantly — indicating a strong pattern of consecutive rainy days.

. Rain was more likely on days when atmospheric pressure at 9 AM was lower than average, consistent with storm prediction science.

. Summer months (Dec–Feb) show higher temperatures and occasional heatwaves.

Conclusion

This analysis helped uncover the relationships between weather features and identify factors influencing rainfall. These findings can be useful for:

. Weather prediction models

. Disaster preparedness

. Agricultural planning


A strong dependency was observed between RainToday and RainTomorrow, highlighting a pattern of consecutive rainy days.

Higher values of Humidity3pm, especially above 75%, often preceded rainy days, making it a potential predictor of rain.


MaxTemp and MinTemp were strongly positively correlated (r ≈ 0.75), showing consistent daily warming and cooling trends.

On rainy days, the average temperature at 3 PM was lower, likely due to cloud cover and reduced sunlight.

Some cities reached temperatures above 45°C, indicating heatwaves in specific regions.
"""